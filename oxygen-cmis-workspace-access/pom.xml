<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<artifactId>oxygen-cmis-workspace-access</artifactId>
	<packaging>jar</packaging>
	
	<parent>
		<groupId>com.oxygenxml.cmis</groupId>
		<artifactId>cmis.plugins</artifactId>
		<version>1.0-SNAPSHOT</version>
	</parent>

  <name>Oxygen CMIS Workspace Access Plugin</name>
	<description>Installs the oxygen-cmis-protocol custom protocol. Contributes views for browsing the server and uses the oxygen-cmis-protocol to open them inside editors.</description>
	
    <developers>
      <developer>
        <name>Alex Jitianu</name>
        <email>alex_jitianu@sync.ro</email>
        <roles>
          <role>manager</role>
        </roles>
      </developer>
    </developers>

	<dependencies>
		<!-- https://mvnrepository.com/artifact/org.apache.chemistry.opencmis/chemistry-opencmis-client-api -->
		<dependency>
			<groupId>com.oxygenxml.cmis</groupId>
			<artifactId>oxygen-cmis-protocol</artifactId>
			<version>${project.version}</version>
		</dependency>


	</dependencies>

	<build>
		<plugins>
		<!-- Copy the runtime dependencies to the lib folder. -->
				<plugin>
					<artifactId>maven-dependency-plugin</artifactId>
					<version>2.8</version>
					<executions>
						<execution>
							<phase>generate-resources</phase>
							<goals>
								<goal>copy-dependencies</goal>
							</goals>
							<configuration>
								<outputDirectory>${project.build.directory}/lib</outputDirectory>
								<includeScope>runtime</includeScope>
							</configuration>
						</execution>
					</executions>
				</plugin>

			<plugin>
					<artifactId>maven-resources-plugin</artifactId>
					<version>3.0.2</version>
					<executions>
						<execution>
							<id>copy-resources</id>
							<!-- here the phase you need -->
							<phase>validate</phase>
							<goals>
								<goal>copy-resources</goal>
							</goals>
							<configuration>
								<outputDirectory>${basedir}/target/addon/</outputDirectory>
								<resources>
									<resource>
										<directory>${project.basedir}/addon</directory>
										<filtering>true</filtering>
									</resource>
								</resources>
							</configuration>
						</execution>
					</executions>
				</plugin>

			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.4</version>
				<executions>
					<execution>
						<id>make-assembly</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<archiveBaseDirectory>${project.basedir}</archiveBaseDirectory>
							<descriptors>
								<descriptor>../assembly.xml</descriptor>
							</descriptors>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.owasp</groupId>
				<artifactId>dependency-check-maven</artifactId>
				<configuration>
				  <suppressionFiles>
					<suppressionFile>${project.basedir}/dependency-check-suppressions.xml</suppressionFile>
				  </suppressionFiles>
				</configuration>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-dependency-plugin
										</artifactId>
										<versionRange>
											[2.8,)
										</versionRange>
										<goals>
											<goal>
												copy-dependencies
											</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	
		<profiles>
		<profile>
			<!-- If an Oxygen plugins dir is provided we will automatically deploy the plugins in it. -->
			<id>auto-install</id>
			<activation>
				<property>
					<name>oxygen.plugins.dir</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.3</version>
						<dependencies>
							<dependency>
								<groupId>ant</groupId>
								<artifactId>ant-nodeps</artifactId>
								<version>1.6.5</version>
							</dependency>
						    <dependency>
							     <groupId>ant-contrib</groupId>
							     <artifactId>ant-contrib</artifactId>
							     <version>1.0b3</version>
							     <!-- ant-contrib has a dependency on ant-1.5 -->
							     <exclusions>
							       <exclusion>
							         <groupId>ant</groupId>
							         <artifactId>ant</artifactId>
							       </exclusion>
							     </exclusions>
							   </dependency>
						</dependencies>
						<executions>
							<execution>
								<id>deploy-to-oxygen</id>
								<phase>install</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<tasks>
									   <taskdef resource="net/sf/antcontrib/antcontrib.properties" classpathref="maven.plugin.classpath"/>
									
									    <available property="package.available" file="target/${project.build.finalName}-plugin.zip"/>
										<if>
										 <equals arg1="${package.available}" arg2="true"/>
										 <then>
											<delete dir="${oxygen.plugins.dir}/${project.artifactId}-${project.version}"/>
											<unzip src="target/${project.build.finalName}-plugin.zip" dest="${oxygen.plugins.dir}"/>
											<delete dir="${oxygen.plugins.dir}/META-INF"/>
										 </then>
										</if>
									</tasks>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
